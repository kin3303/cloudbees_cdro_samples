<?xml version="1.0" encoding="UTF-8"?>
<exportedData version="107" buildLabel="build_10.4_153852_2022.03.22_08:16:02" buildVersion="10.4.2.153852" passkey="82975e759979c12c426a4ee4589bd962d81e154f">
  <exportPath>/projects/Hashicup</exportPath>
  <project>
    <projectName>Hashicup</projectName>
    <resourceName>local</resourceName>
    <tracked>0</tracked>
    <workspaceName>default</workspaceName>
    <acl>
      <inheriting>1</inheriting>
      <tracked>0</tracked>
      <aclEntry>
        <allowChangePermissions>1</allowChangePermissions>
        <allowExecute>1</allowExecute>
        <allowModify>1</allowModify>
        <allowRead>1</allowRead>
        <denyChangePermissions>0</denyChangePermissions>
        <denyExecute>0</denyExecute>
        <denyModify>0</denyModify>
        <denyRead>0</denyRead>
        <principalName>project: Hashicup</principalName>
        <principalType>user</principalType>
        <tracked>0</tracked>
      </aclEntry>
    </acl>
    <propertySheet>
      <credentialProtected>0</credentialProtected>
      <tracked>0</tracked>
      <acl>
        <inheriting>1</inheriting>
        <tracked>0</tracked>
      </acl>
    </propertySheet>
    <credentialProvider>
      <credentialProviderName>vault</credentialProviderName>
      <authMethodsMapping></authMethodsMapping>
      <description></description>
      <namespace></namespace>
      <password>dev</password>
      <providerType>HASHICORP</providerType>
      <roleId></roleId>
      <secretEnginePath>jenkins</secretEnginePath>
      <secretEngineType>KV2</secretEngineType>
      <secretId></secretId>
      <serverUrl>https://vault.idtplateer.com</serverUrl>
      <token></token>
      <tracked>0</tracked>
      <userName>dev</userName>
      <acl>
        <inheriting>0</inheriting>
        <tracked>0</tracked>
        <aclEntry>
          <allowChangePermissions>0</allowChangePermissions>
          <allowExecute>0</allowExecute>
          <allowModify>0</allowModify>
          <allowRead>1</allowRead>
          <denyChangePermissions>0</denyChangePermissions>
          <denyExecute>0</denyExecute>
          <denyModify>0</denyModify>
          <denyRead>0</denyRead>
          <principalName>Everyone</principalName>
          <principalType>group</principalType>
          <tracked>0</tracked>
        </aclEntry>
      </acl>
    </credentialProvider>
    <credential>
      <credentialName>harbor</credentialName>
      <credentialType>LOCAL</credentialType>
      <description></description>
      <password>L8PS9XyZT8/8LwZkDYN/TQ==</password>
      <secretPath></secretPath>
      <tracked>0</tracked>
      <userName>admin</userName>
      <acl>
        <inheriting>0</inheriting>
        <tracked>0</tracked>
        <aclEntry>
          <allowChangePermissions>0</allowChangePermissions>
          <allowExecute>0</allowExecute>
          <allowModify>0</allowModify>
          <allowRead>1</allowRead>
          <denyChangePermissions>0</denyChangePermissions>
          <denyExecute>0</denyExecute>
          <denyModify>0</denyModify>
          <denyRead>0</denyRead>
          <principalName>Everyone</principalName>
          <principalType>group</principalType>
          <tracked>0</tracked>
        </aclEntry>
        <aclEntry>
          <allowChangePermissions>1</allowChangePermissions>
          <allowExecute>1</allowExecute>
          <allowModify>1</allowModify>
          <allowRead>1</allowRead>
          <denyChangePermissions>0</denyChangePermissions>
          <denyExecute>0</denyExecute>
          <denyModify>0</denyModify>
          <denyRead>0</denyRead>
          <principalName>admin</principalName>
          <principalType>user</principalType>
          <tracked>0</tracked>
        </aclEntry>
      </acl>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
      </propertySheet>
    </credential>
    <credential>
      <credentialName>harbor_cred</credentialName>
      <credentialProviderName>vault</credentialProviderName>
      <credentialProviderProjectName>Hashicup</credentialProviderProjectName>
      <credentialType>EXTERNAL</credentialType>
      <description></description>
      <secretPath>harbor_cred/password</secretPath>
      <tracked>0</tracked>
      <userName>admin</userName>
      <acl>
        <inheriting>0</inheriting>
        <tracked>0</tracked>
        <aclEntry>
          <allowChangePermissions>0</allowChangePermissions>
          <allowExecute>0</allowExecute>
          <allowModify>0</allowModify>
          <allowRead>1</allowRead>
          <denyChangePermissions>0</denyChangePermissions>
          <denyExecute>0</denyExecute>
          <denyModify>0</denyModify>
          <denyRead>0</denyRead>
          <principalName>Everyone</principalName>
          <principalType>group</principalType>
          <tracked>0</tracked>
        </aclEntry>
        <aclEntry>
          <allowChangePermissions>1</allowChangePermissions>
          <allowExecute>1</allowExecute>
          <allowModify>1</allowModify>
          <allowRead>1</allowRead>
          <denyChangePermissions>0</denyChangePermissions>
          <denyExecute>0</denyExecute>
          <denyModify>0</denyModify>
          <denyRead>0</denyRead>
          <principalName>admin</principalName>
          <principalType>user</principalType>
          <tracked>0</tracked>
        </aclEntry>
      </acl>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
      </propertySheet>
    </credential>
    <credential>
      <credentialName>jenkinscred</credentialName>
      <credentialType>LOCAL</credentialType>
      <description></description>
      <password>Xp9Y9o6tXRy+CAaDuXWdlA==</password>
      <tracked>0</tracked>
      <userName>admin</userName>
      <acl>
        <inheriting>0</inheriting>
        <tracked>0</tracked>
        <aclEntry>
          <allowChangePermissions>0</allowChangePermissions>
          <allowExecute>0</allowExecute>
          <allowModify>0</allowModify>
          <allowRead>1</allowRead>
          <denyChangePermissions>0</denyChangePermissions>
          <denyExecute>0</denyExecute>
          <denyModify>0</denyModify>
          <denyRead>0</denyRead>
          <principalName>Everyone</principalName>
          <principalType>group</principalType>
          <tracked>0</tracked>
        </aclEntry>
        <aclEntry>
          <allowChangePermissions>1</allowChangePermissions>
          <allowExecute>1</allowExecute>
          <allowModify>1</allowModify>
          <allowRead>1</allowRead>
          <denyChangePermissions>0</denyChangePermissions>
          <denyExecute>0</denyExecute>
          <denyModify>0</denyModify>
          <denyRead>0</denyRead>
          <principalName>admin</principalName>
          <principalType>user</principalType>
          <tracked>0</tracked>
        </aclEntry>
      </acl>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
      </propertySheet>
    </credential>
    <pluginConfiguration>
      <pluginConfigurationName>helmcfg</pluginConfigurationName>
      <description></description>
      <pluginKey>EC-Helm</pluginKey>
      <tracked>0</tracked>
      <acl>
        <inheriting>1</inheriting>
        <tracked>0</tracked>
      </acl>
      <fields>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <property>
          <propertyName>checkConnectionResource</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>local</value>
        </property>
        <property>
          <propertyName>createKubeconfig</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>0</value>
        </property>
        <property>
          <propertyName>debugLevel</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>0</value>
        </property>
        <property>
          <propertyName>helmPath</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>/usr/local/bin/helm</value>
        </property>
        <property>
          <propertyName>helmVersion</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>3</value>
        </property>
        <property>
          <propertyName>kubectlExecutablePath</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>/usr/local/bin/kubectl</value>
        </property>
      </fields>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
      </propertySheet>
    </pluginConfiguration>
    <pluginConfiguration>
      <pluginConfigurationName>kubecfg</pluginConfigurationName>
      <description></description>
      <pluginKey>EC-Kubectl</pluginKey>
      <tracked>0</tracked>
      <acl>
        <inheriting>1</inheriting>
        <tracked>0</tracked>
      </acl>
      <fields>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <property>
          <propertyName>kubeconfigSource</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>kubeconfigDefault</value>
        </property>
        <property>
          <propertyName>kubectlPath</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>/usr/local/bin/kubectl</value>
        </property>
        <property>
          <propertyName>logLevel</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>0</suppressValueTracking>
          <tracked>0</tracked>
          <value>INFO</value>
        </property>
      </fields>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
      </propertySheet>
    </pluginConfiguration>
    <environment>
      <environmentName>Hashicup_plateer</environmentName>
      <environmentEnabled>1</environmentEnabled>
      <tracked>0</tracked>
      <acl>
        <inheriting>1</inheriting>
        <tracked>0</tracked>
      </acl>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
      </propertySheet>
      <cluster>
        <clusterName>Hashicup_plateer</clusterName>
        <environmentName>Hashicup_plateer</environmentName>
        <pluginKey>EC-Helm</pluginKey>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <definitionParameters>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <property>
            <propertyName>config</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>/projects/Hashicup/pluginConfigurations/helmcfg</value>
          </property>
          <property>
            <propertyName>kubecontext</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value></value>
          </property>
          <property>
            <propertyName>namespace</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>plateer</value>
          </property>
        </definitionParameters>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
      </cluster>
      <deploymentHistoryItem>
        <deploymentHistoryItemName>aec02500-c16c-11ed-a5ba-02a0006646c8</deploymentHistoryItemName>
        <completionTime>1678690805081</completionTime>
        <deployedEntityName>Hashicup_plateer</deployedEntityName>
        <deployedEntityType>application</deployedEntityType>
        <processName>Uninstall Application</processName>
        <runTime>5297</runTime>
        <smartDeploy>0</smartDeploy>
        <status>success</status>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
      </deploymentHistoryItem>
      <deploymentHistoryItem>
        <deploymentHistoryItemName>b97785f1-c16c-11ed-a572-02a0006646c8</deploymentHistoryItemName>
        <completionTime>1678690823060</completionTime>
        <deployedEntityName>Hashicup_plateer</deployedEntityName>
        <deployedEntityType>application</deployedEntityType>
        <processName>Deploy Application</processName>
        <runTime>48102</runTime>
        <seeded>0</seeded>
        <smartDeploy>0</smartDeploy>
        <status>success</status>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <property>
            <propertyName>ec_Hashicup-run</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>1</value>
          </property>
          <property>
            <propertyName>ec_Hashicup_plateer-run</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>1</value>
          </property>
        </propertySheet>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>d3d0f954-c16c-11ed-a572-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v0.0.21</actualArtifactVersion>
          <artifactName>postgres</artifactName>
          <definedArtifactVersion>v0.0.21</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <environmentInventoryItem>
            <environmentInventoryItemName>75e8418c-c16b-11ed-a5ba-02a0006646c875962943-c16b-11ed-b730-02a0006646c8-728441572</environmentInventoryItemName>
            <artifactProviderSource>hashicup/templates/postgres.yaml</artifactProviderSource>
            <artifactSource>hashicorpdemoapp/product-api-db</artifactSource>
            <artifactUrl>N/A</artifactUrl>
            <clusterName>Hashicup_plateer</clusterName>
            <clusterNamespace>plateer</clusterNamespace>
            <resourceName>local</resourceName>
            <status>success</status>
            <versionMismatch>0</versionMismatch>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </environmentInventoryItem>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>d3b5d030-c16c-11ed-a572-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v1.0.3</actualArtifactVersion>
          <artifactName>frontend</artifactName>
          <definedArtifactVersion>v1.0.3</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <environmentInventoryItem>
            <environmentInventoryItemName>75e8418c-c16b-11ed-a5ba-02a0006646c875962943-c16b-11ed-b730-02a0006646c81846363747</environmentInventoryItemName>
            <artifactProviderSource>hashicup/templates/frontend.yaml</artifactProviderSource>
            <artifactSource>hashicorpdemoapp/frontend</artifactSource>
            <artifactUrl>N/A</artifactUrl>
            <clusterName>Hashicup_plateer</clusterName>
            <clusterNamespace>plateer</clusterNamespace>
            <resourceName>local</resourceName>
            <status>success</status>
            <versionMismatch>0</versionMismatch>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </environmentInventoryItem>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>d3ebad48-c16c-11ed-a572-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>latest</actualArtifactVersion>
          <artifactName>jaeger-agent</artifactName>
          <definedArtifactVersion>latest</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <environmentInventoryItem>
            <environmentInventoryItemName>75e8418c-c16b-11ed-a5ba-02a0006646c875962943-c16b-11ed-b730-02a0006646c8303257975</environmentInventoryItemName>
            <artifactProviderSource>hashicup/templates/public-api.yaml</artifactProviderSource>
            <artifactSource>jaegertracing/jaeger-agent</artifactSource>
            <artifactUrl>N/A</artifactUrl>
            <clusterName>Hashicup_plateer</clusterName>
            <clusterNamespace>plateer</clusterNamespace>
            <resourceName>local</resourceName>
            <status>success</status>
            <versionMismatch>0</versionMismatch>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </environmentInventoryItem>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>d3bf6d11-c16c-11ed-9492-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>alpine</actualArtifactVersion>
          <artifactName>nginx</artifactName>
          <definedArtifactVersion>alpine</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <environmentInventoryItem>
            <environmentInventoryItemName>75e8418c-c16b-11ed-a5ba-02a0006646c875962943-c16b-11ed-b730-02a0006646c8-690166007</environmentInventoryItemName>
            <artifactProviderSource>hashicup/templates/nginx.yaml</artifactProviderSource>
            <artifactSource>nginx</artifactSource>
            <artifactUrl>N/A</artifactUrl>
            <clusterName>Hashicup_plateer</clusterName>
            <clusterNamespace>plateer</clusterNamespace>
            <resourceName>local</resourceName>
            <status>success</status>
            <versionMismatch>0</versionMismatch>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </environmentInventoryItem>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>d3d9abd5-c16c-11ed-9492-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v0.0.21</actualArtifactVersion>
          <artifactName>products-api</artifactName>
          <definedArtifactVersion>v0.0.21</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <environmentInventoryItem>
            <environmentInventoryItemName>75e8418c-c16b-11ed-a5ba-02a0006646c875962943-c16b-11ed-b730-02a0006646c8-1258934556</environmentInventoryItemName>
            <artifactProviderSource>hashicup/templates/products-api.yaml</artifactProviderSource>
            <artifactSource>hashicorpdemoapp/product-api</artifactSource>
            <artifactUrl>N/A</artifactUrl>
            <clusterName>Hashicup_plateer</clusterName>
            <clusterNamespace>plateer</clusterNamespace>
            <resourceName>local</resourceName>
            <status>success</status>
            <versionMismatch>0</versionMismatch>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </environmentInventoryItem>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>d3c86e86-c16c-11ed-8a1d-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v0.0.16</actualArtifactVersion>
          <artifactName>payments</artifactName>
          <definedArtifactVersion>v0.0.16</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <environmentInventoryItem>
            <environmentInventoryItemName>75e8418c-c16b-11ed-a5ba-02a0006646c875962943-c16b-11ed-b730-02a0006646c81914222312</environmentInventoryItemName>
            <artifactProviderSource>hashicup/templates/payments.yaml</artifactProviderSource>
            <artifactSource>hashicorpdemoapp/payments</artifactSource>
            <artifactUrl>N/A</artifactUrl>
            <clusterName>Hashicup_plateer</clusterName>
            <clusterNamespace>plateer</clusterNamespace>
            <resourceName>local</resourceName>
            <status>success</status>
            <versionMismatch>0</versionMismatch>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </environmentInventoryItem>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>d3e2ad4a-c16c-11ed-8a1d-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v0.0.6</actualArtifactVersion>
          <artifactName>public-api</artifactName>
          <definedArtifactVersion>v0.0.6</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <environmentInventoryItem>
            <environmentInventoryItemName>75e8418c-c16b-11ed-a5ba-02a0006646c875962943-c16b-11ed-b730-02a0006646c8-1811231489</environmentInventoryItemName>
            <artifactProviderSource>hashicup/templates/public-api.yaml</artifactProviderSource>
            <artifactSource>hashicorpdemoapp/public-api</artifactSource>
            <artifactUrl>N/A</artifactUrl>
            <clusterName>Hashicup_plateer</clusterName>
            <clusterNamespace>plateer</clusterNamespace>
            <resourceName>local</resourceName>
            <status>success</status>
            <versionMismatch>0</versionMismatch>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </environmentInventoryItem>
        </deploymentDetailsItem>
        <microserviceDeploymentDetail>
          <microserviceDeploymentDetailName>d3b4979c-c16c-11ed-a572-02a0006646c8</microserviceDeploymentDetailName>
          <microserviceDefinitionType>helm</microserviceDefinitionType>
          <microserviceDeploymentData>{&#10;   "app_version" : "0.1.0",&#10;   "chart" : "hashicup-0.1.0",&#10;   "chart_name" : "hashicup",&#10;   "chart_version" : "0.1.0",&#10;   "manifests" : [&#10;      {&#10;         "source" : "hashicup/templates/frontend.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/frontend.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: frontend\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "frontend"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nginx\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "nginx"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/payments.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/payments.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: payments\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "payments"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/postgres.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/postgres.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: postgres\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "postgres"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: products-api\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "products-api"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/public-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/public-api.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: public-api\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "public-api"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-configmap\ndata:\n  config: |\n\n    # /etc/nginx/conf.d/default.conf\n      proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;\n\n      upstream frontend_upstream {\n        server localhost:3000;\n      }\n\n      server {\n        listen 80;\n        server_name  localhost;\n\n        server_tokens off;\n\n        gzip on;\n        gzip_proxied any;\n        gzip_comp_level 4;\n        gzip_types text/css application/javascript image/svg+xml;\n\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n\n        location /_next/static {\n          proxy_cache STATIC;\n          proxy_pass http://frontend_upstream;\n\n          # For testing cache - remove before deploying to production\n          # add_header X-Cache-Status $upstream_cache_status;\n        }\n\n        location /static {\n          proxy_cache STATIC;\n          proxy_ignore_headers Cache-Control;\n          proxy_cache_valid 60m;\n          proxy_pass http://frontend_upstream;\n\n          # For testing cache - remove before deploying to production\n          # add_header X-Cache-Status $upstream_cache_status;\n        }\n\n        location / {\n          proxy_pass http://frontend_upstream;\n        }\n\n        location /api {\n          proxy_pass http://localhost:8080;\n        }\n      }\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "data" : {&#10;               "config" : "proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;\nupstream frontend_upstream {\n  server localhost:3000;\n}\nserver {\n  listen 80;\n  server_name  localhost;\n  server_tokens off;\n  gzip on;\n  gzip_proxied any;\n  gzip_comp_level 4;\n  gzip_types text/css application/javascript image/svg+xml;\n  proxy_http_version 1.1;\n  proxy_set_header Upgrade $http_upgrade;\n  proxy_set_header Connection 'upgrade';\n  proxy_set_header Host $host;\n  proxy_cache_bypass $http_upgrade;\n  location /_next/static {\n    proxy_cache STATIC;\n    proxy_pass http://frontend_upstream;\n  }\n  location /static {\n    proxy_cache STATIC;\n    proxy_ignore_headers Cache-Control;\n    proxy_cache_valid 60m;\n    proxy_pass http://frontend_upstream;\n  }\n  location / {\n    proxy_pass http://frontend_upstream;\n  }\n  location /api {\n    proxy_pass http://localhost:8080;\n  }\n}\n"&#10;            },&#10;            "kind" : "ConfigMap",&#10;            "metadata" : {&#10;               "name" : "nginx-configmap"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-configmap\ndata:\n  config: |\n    {\n      \"db_connection\": \"host=localhost port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "data" : {&#10;               "config" : "{\n  \"db_connection\": \"host=localhost port=5432 user=postgres password=password dbname=products sslmode=disable\",\n  \"bind_address\": \":9090\",\n  \"metrics_address\": \":9103\"\n}\n"&#10;            },&#10;            "kind" : "ConfigMap",&#10;            "metadata" : {&#10;               "name" : "db-configmap"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/frontend.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/frontend.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: frontend\nspec:\n  type: ClusterIP\n  ports:\n    - port: 3000\n      targetPort: 3000\n  selector:\n    app: frontend\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "frontend"&#10;               },&#10;               "name" : "frontend"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "port" : "3000",&#10;                     "targetPort" : "3000"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "frontend"&#10;               },&#10;               "type" : "ClusterIP"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  selector:\n    app: nginx\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 80\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "name" : "nginx"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "name" : "http",&#10;                     "port" : "80",&#10;                     "protocol" : "TCP",&#10;                     "targetPort" : "80"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "nginx"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/payments.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/payments.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  selector:\n    app: payments\n  ports:\n    - name: http\n      protocol: TCP\n      port: 1800\n      targetPort: 8080\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "name" : "payments"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "name" : "http",&#10;                     "port" : "1800",&#10;                     "protocol" : "TCP",&#10;                     "targetPort" : "8080"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "payments"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/postgres.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/postgres.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres\n  labels:\n    app: postgres\nspec:\n  ports:\n    - port: 5432\n      targetPort: 5432\n      protocol: TCP\n  selector:\n    app: postgres\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "postgres"&#10;               },&#10;               "name" : "postgres"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "port" : "5432",&#10;                     "protocol" : "TCP",&#10;                     "targetPort" : "5432"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "postgres"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: products-api\nspec:\n  selector:\n    app: products-api\n  ports:\n    - name: http\n      protocol: TCP\n      port: 9090\n      targetPort: 9090\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "name" : "products-api"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "name" : "http",&#10;                     "port" : "9090",&#10;                     "protocol" : "TCP",&#10;                     "targetPort" : "9090"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "products-api"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/public-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/public-api.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: public-api\n  labels:\n    app: public-api\nspec:\n  type: ClusterIP\n  ports:\n    - port: 8080\n      targetPort: 8080\n  selector:\n    app: public-api\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "public-api"&#10;               },&#10;               "name" : "public-api"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "port" : "8080",&#10;                     "targetPort" : "8080"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "public-api"&#10;               },&#10;               "type" : "ClusterIP"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/frontend.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/frontend.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: frontend\n      app: frontend\n  template:\n    metadata:\n      labels:\n        service: frontend\n        app: frontend\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: frontend\n      containers:\n        - name: frontend\n          image: hashicorpdemoapp/frontend:v1.0.3\n          imagePullPolicy: Always\n          env:\n            - name: NEXT_PUBLIC_PUBLIC_API_URL\n              value: \"/\"\n          ports:\n            - containerPort: 3000\n          # Added for debugging purposes - NOT RECOMMENDED\n          # securityContext:\n          #   allowPrivilegeEscalation: false\n          #   runAsUser: 0\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "name" : "frontend"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "frontend",&#10;                     "service" : "frontend"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "prometheus.io/port" : "9102",&#10;                        "prometheus.io/scrape" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "frontend",&#10;                        "service" : "frontend"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "env" : [&#10;                              {&#10;                                 "name" : "NEXT_PUBLIC_PUBLIC_API_URL",&#10;                                 "value" : "/"&#10;                              }&#10;                           ],&#10;                           "image" : "hashicorpdemoapp/frontend:v1.0.3",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "frontend",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "3000"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "frontend"&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        # BEGIN CONSUL-K8S MODIFICATION\n        consul.hashicorp.com/connect-service-upstreams: 'public-api:8080, frontend:3000'\n        # END CONSUL-K8S MODIFICATION\n    spec:\n      serviceAccountName: nginx\n      volumes:\n        - name: config\n          configMap:\n            name: nginx-configmap\n            items:\n              - key: config\n                path: default.conf\n      containers:\n        - name: nginx\n          image: nginx:alpine\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: config\n              mountPath: /etc/nginx/conf.d\n              readOnly: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "nginx"&#10;               },&#10;               "name" : "nginx"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "nginx"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "consul.hashicorp.com/connect-service-upstreams" : "public-api:8080, frontend:3000"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "nginx"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "image" : "nginx:alpine",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "nginx",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "80"&#10;                              }&#10;                           ],&#10;                           "volumeMounts" : [&#10;                              {&#10;                                 "mountPath" : "/etc/nginx/conf.d",&#10;                                 "name" : "config",&#10;                                 "readOnly" : "true"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "nginx",&#10;                     "volumes" : [&#10;                        {&#10;                           "configMap" : {&#10;                              "items" : [&#10;                                 {&#10;                                    "key" : "config",&#10;                                    "path" : "default.conf"&#10;                                 }&#10;                              ],&#10;                              "name" : "nginx-configmap"&#10;                           },&#10;                           "name" : "config"&#10;                        }&#10;                     ]&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/payments.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/payments.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payments\n  labels:\n    app: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      labels:\n        app: payments\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: payments\n      containers:\n        - name: payments\n          image: hashicorpdemoapp/payments:v0.0.16\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "payments"&#10;               },&#10;               "name" : "payments"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "payments"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "payments"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "image" : "hashicorpdemoapp/payments:v0.0.16",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "payments",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "8080"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "payments"&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/postgres.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/postgres.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: postgres\n      app: postgres\n  template:\n    metadata:\n      labels:\n        service: postgres\n        app: postgres\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: postgres\n      containers:\n        - name: postgres\n          image: hashicorpdemoapp/product-api-db:v0.0.21\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 5432\n          env:\n            - name: POSTGRES_DB\n              value: products\n            - name: POSTGRES_USER\n              value: postgres\n            - name: POSTGRES_PASSWORD\n              value: password\n          volumeMounts:\n            - mountPath: \"/var/lib/postgresql/data\"\n              name: \"pgdata\"\n      volumes:\n        - name: pgdata\n          emptyDir: {}\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "name" : "postgres"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "postgres",&#10;                     "service" : "postgres"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "prometheus.io/port" : "9102",&#10;                        "prometheus.io/scrape" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "postgres",&#10;                        "service" : "postgres"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "env" : [&#10;                              {&#10;                                 "name" : "POSTGRES_DB",&#10;                                 "value" : "products"&#10;                              },&#10;                              {&#10;                                 "name" : "POSTGRES_USER",&#10;                                 "value" : "postgres"&#10;                              },&#10;                              {&#10;                                 "name" : "POSTGRES_PASSWORD",&#10;                                 "value" : "password"&#10;                              }&#10;                           ],&#10;                           "image" : "hashicorpdemoapp/product-api-db:v0.0.21",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "postgres",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "5432"&#10;                              }&#10;                           ],&#10;                           "volumeMounts" : [&#10;                              {&#10;                                 "mountPath" : "/var/lib/postgresql/data",&#10;                                 "name" : "pgdata"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "postgres",&#10;                     "volumes" : [&#10;                        {&#10;                           "emptyDir" : {},&#10;                           "name" : "pgdata"&#10;                        }&#10;                     ]&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: products-api\n  labels:\n    app: products-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: products-api\n  template:\n    metadata:\n      labels:\n        app: products-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n        # BEGIN CONSUL-K8S MODIFICATION\n        consul.hashicorp.com/connect-service-upstreams: 'postgres:5432'\n        # END CONSUL-K8S MODIFICATION\n    spec:\n      serviceAccountName: products-api\n      volumes:\n        - name: config\n          configMap:\n            name: db-configmap\n            items:\n              - key: config\n                path: conf.json\n      containers:\n        - name: products-api\n          image: hashicorpdemoapp/product-api:v0.0.21\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 9090\n            - containerPort: 9103\n          env:\n            - name: \"CONFIG_FILE\"\n              value: \"/config/conf.json\"\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 9090\n            initialDelaySeconds: 15\n            timeoutSeconds: 1\n            periodSeconds: 10\n            failureThreshold: 30\n          volumeMounts:\n            - name: config\n              mountPath: /config\n              readOnly: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "products-api"&#10;               },&#10;               "name" : "products-api"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "products-api"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "consul.hashicorp.com/connect-service-upstreams" : "postgres:5432",&#10;                        "prometheus.io/port" : "9102",&#10;                        "prometheus.io/scrape" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "products-api"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "env" : [&#10;                              {&#10;                                 "name" : "CONFIG_FILE",&#10;                                 "value" : "/config/conf.json"&#10;                              }&#10;                           ],&#10;                           "image" : "hashicorpdemoapp/product-api:v0.0.21",&#10;                           "imagePullPolicy" : "Always",&#10;                           "livenessProbe" : {&#10;                              "failureThreshold" : "30",&#10;                              "httpGet" : {&#10;                                 "path" : "/health",&#10;                                 "port" : "9090"&#10;                              },&#10;                              "initialDelaySeconds" : "15",&#10;                              "periodSeconds" : "10",&#10;                              "timeoutSeconds" : "1"&#10;                           },&#10;                           "name" : "products-api",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "9090"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "9103"&#10;                              }&#10;                           ],&#10;                           "volumeMounts" : [&#10;                              {&#10;                                 "mountPath" : "/config",&#10;                                 "name" : "config",&#10;                                 "readOnly" : "true"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "products-api",&#10;                     "volumes" : [&#10;                        {&#10;                           "configMap" : {&#10;                              "items" : [&#10;                                 {&#10;                                    "key" : "config",&#10;                                    "path" : "conf.json"&#10;                                 }&#10;                              ],&#10;                              "name" : "db-configmap"&#10;                           },&#10;                           "name" : "config"&#10;                        }&#10;                     ]&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/public-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/public-api.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: public-api\n      app: public-api\n  template:\n    metadata:\n      labels:\n        service: public-api\n        app: public-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n        # BEGIN CONSUL-K8S MODIFICATION\n        consul.hashicorp.com/connect-service-upstreams: 'products-api:9090, payments:1800'\n        # END CONSUL-K8S MODIFICATION\n    spec:\n      serviceAccountName: public-api\n      containers:\n        - name: public-api\n          image: hashicorpdemoapp/public-api:v0.0.6\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080\n          env:\n            - name: BIND_ADDRESS\n              value: \":8080\"\n            - name: PRODUCT_API_URI\n              value: \"http://localhost:9090\"\n            - name: PAYMENT_API_URI\n              value: \"http://localhost:1800\"\n        - name: jaeger-agent\n          image: jaegertracing/jaeger-agent:latest\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 5775\n              name: zk-compact-trft\n              protocol: UDP\n            - containerPort: 5778\n              name: config-rest\n              protocol: TCP\n            - containerPort: 6831\n              name: jg-compact-trft\n              protocol: UDP\n            - containerPort: 6832\n              name: jg-binary-trft\n              protocol: UDP\n            - containerPort: 14271\n              name: admin-http\n              protocol: TCP\n          args:\n            - --reporter.grpc.host-port=dns:///jaeger-collector-headless.default:14250\n            - --reporter.type=grpc\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "name" : "public-api"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "public-api",&#10;                     "service" : "public-api"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "consul.hashicorp.com/connect-service-upstreams" : "products-api:9090, payments:1800",&#10;                        "prometheus.io/port" : "9102",&#10;                        "prometheus.io/scrape" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "public-api",&#10;                        "service" : "public-api"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "env" : [&#10;                              {&#10;                                 "name" : "BIND_ADDRESS",&#10;                                 "value" : ":8080"&#10;                              },&#10;                              {&#10;                                 "name" : "PRODUCT_API_URI",&#10;                                 "value" : "http://localhost:9090"&#10;                              },&#10;                              {&#10;                                 "name" : "PAYMENT_API_URI",&#10;                                 "value" : "http://localhost:1800"&#10;                              }&#10;                           ],&#10;                           "image" : "hashicorpdemoapp/public-api:v0.0.6",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "public-api",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "8080"&#10;                              }&#10;                           ]&#10;                        },&#10;                        {&#10;                           "args" : [&#10;                              "--reporter.grpc.host-port=dns:///jaeger-collector-headless.default:14250",&#10;                              "--reporter.type=grpc"&#10;                           ],&#10;                           "image" : "jaegertracing/jaeger-agent:latest",&#10;                           "imagePullPolicy" : "IfNotPresent",&#10;                           "name" : "jaeger-agent",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "5775",&#10;                                 "name" : "zk-compact-trft",&#10;                                 "protocol" : "UDP"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "5778",&#10;                                 "name" : "config-rest",&#10;                                 "protocol" : "TCP"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "6831",&#10;                                 "name" : "jg-compact-trft",&#10;                                 "protocol" : "UDP"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "6832",&#10;                                 "name" : "jg-binary-trft",&#10;                                 "protocol" : "UDP"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "14271",&#10;                                 "name" : "admin-http",&#10;                                 "protocol" : "TCP"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "public-api"&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/ingressGateway.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/ingressGateway.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\n  namespace: consul\nspec:\n  listeners:\n    - port: 8080\n      protocol: http\n      services:\n        - name: nginx\n          hosts: [\"*\"]\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "IngressGateway",&#10;            "metadata" : {&#10;               "name" : "ingress-gateway",&#10;               "namespace" : "consul"&#10;            },&#10;            "spec" : {&#10;               "listeners" : [&#10;                  {&#10;                     "port" : "8080",&#10;                     "protocol" : "http",&#10;                     "services" : [&#10;                        {&#10;                           "hosts" : "[\"*\"]",&#10;                           "name" : "nginx"&#10;                        }&#10;                     ]&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/proxyDefaults.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/proxyDefaults.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ProxyDefaults \nmetadata:\n  name: global\nspec:\n  config:\n    protocol: http\n    envoy_tracing_json: | \n      {\n        \"http\":{\n          \"name\":\"envoy.tracers.zipkin\",\n          \"typedConfig\":{\n            \"@type\":\"type.googleapis.com/envoy.config.trace.v3.ZipkinConfig\",\n            \"collector_cluster\":\"jaeger_collector\",\n            \"collector_endpoint_version\":\"HTTP_JSON\",\n            \"collector_endpoint\":\"/api/v2/spans\",\n            \"shared_span_context\":false\n          }\n        }\n      }\n    envoy_extra_static_clusters_json: | \n      {\n        \"connect_timeout\":\"3.000s\",\n        \"dns_lookup_family\":\"V4_ONLY\",\n        \"lb_policy\":\"ROUND_ROBIN\",\n        \"load_assignment\":{\n          \"cluster_name\":\"jaeger_collector\",\n          \"endpoints\":[\n            {\n              \"lb_endpoints\":[\n                {\n                  \"endpoint\":{\n                    \"address\":{\n                      \"socket_address\":{\n                        \"address\":\"jaeger-collector.default\",\n                        \"port_value\":9411, \n                        \"protocol\":\"TCP\"\n                      }\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        \"name\":\"jaeger_collector\",\n        \"type\":\"STRICT_DNS\"\n      }\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ProxyDefaults",&#10;            "metadata" : {&#10;               "name" : "global"&#10;            },&#10;            "spec" : {&#10;               "config" : {&#10;                  "envoy_extra_static_clusters_json" : "{\n  \"connect_timeout\":\"3.000s\",\n  \"dns_lookup_family\":\"V4_ONLY\",\n  \"lb_policy\":\"ROUND_ROBIN\",\n  \"load_assignment\":{\n    \"cluster_name\":\"jaeger_collector\",\n    \"endpoints\":[\n      {\n        \"lb_endpoints\":[\n          {\n            \"endpoint\":{\n              \"address\":{\n                \"socket_address\":{\n                  \"address\":\"jaeger-collector.default\",\n                  \"port_value\":9411, \n                  \"protocol\":\"TCP\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"name\":\"jaeger_collector\",\n  \"type\":\"STRICT_DNS\"\n}\n",&#10;                  "envoy_tracing_json" : "{\n  \"http\":{\n    \"name\":\"envoy.tracers.zipkin\",\n    \"typedConfig\":{\n      \"@type\":\"type.googleapis.com/envoy.config.trace.v3.ZipkinConfig\",\n      \"collector_cluster\":\"jaeger_collector\",\n      \"collector_endpoint_version\":\"HTTP_JSON\",\n      \"collector_endpoint\":\"/api/v2/spans\",\n      \"shared_span_context\":false\n    }\n  }\n}\n",&#10;                  "protocol" : "http"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/frontend.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/frontend.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "frontend"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: nginx\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "nginx"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/payments.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/payments.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "payments"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/postgres.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/postgres.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: postgres\nspec:\n  protocol: \"tcp\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "postgres"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "tcp"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: products-api\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "products-api"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/public-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/public-api.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "public-api"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api-hashicup\nspec:\n  sources:\n    - name: nginx\n      action: allow\n  destination:\n    name: public-api\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "public-api-hashicup"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "public-api"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "nginx"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: products-api-hashicup\nspec:\n  sources:\n    - name: public-api\n      action: allow\n  destination:\n    name: products-api\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "products-api-hashicup"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "products-api"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "public-api"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  sources:\n    - name: public-api-hashicup\n      action: allow\n  destination:\n    name: payments\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "payments"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "payments"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "public-api-hashicup"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: postgres\nspec:\n  sources:\n    - name: products-api-hashicup\n      action: allow\n  destination:\n    name: postgres\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "postgres"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "postgres"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "products-api-hashicup"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend-hashicup\nspec:\n  sources:\n    - name: nginx\n      action: allow\n  destination:\n    name: frontend\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "frontend-hashicup"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "frontend"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "nginx"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: deny-all\nspec:\n  destination:\n    name: \"*\"\n  sources:\n    - name: \"*\" \n      action: deny\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "deny-all"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "*"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "deny",&#10;                     "name" : "*"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      }&#10;   ],&#10;   "name" : "my-hashicup",&#10;   "namespace" : "plateer",&#10;   "notes" : "",&#10;   "revision" : "1",&#10;   "status" : "deployed",&#10;   "updated" : "2023-03-13 16:00:30.273644151 +0900 KST",&#10;   "values" : {}&#10;}&#10;</microserviceDeploymentData>
          <microserviceDeploymentSummary>NAME: my-hashicup&#10;LAST DEPLOYED: Mon Mar 13 16:00:30 2023&#10;NAMESPACE: plateer&#10;STATUS: deployed&#10;REVISION: 1&#10;TEST SUITE: None&#10;</microserviceDeploymentSummary>
          <microserviceName>Hashicup_plateer</microserviceName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <definitionSourceParameters>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>repositoryName</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>hashicup-repo</value>
            </property>
            <property>
              <propertyName>repositoryUrl</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>https://harbor.idtplateer.com/chartrepo/hashicup</value>
            </property>
            <property>
              <propertyName>repository_credential</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>/projects/Hashicup/credentials/harbor_cred</value>
            </property>
          </definitionSourceParameters>
          <deployParameters>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>additionalOptions</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>--create-namespace</value>
            </property>
            <property>
              <propertyName>chart</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>hashicup</value>
            </property>
            <property>
              <propertyName>releaseName</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>my-hashicup</value>
            </property>
            <property>
              <propertyName>values</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value></value>
            </property>
            <property>
              <propertyName>version</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>0.1.0</value>
            </property>
          </deployParameters>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <rollbackParameters>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>rollbackEnabled</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>true</value>
            </property>
            <property>
              <propertyName>waitTimeout</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>300</value>
            </property>
          </rollbackParameters>
        </microserviceDeploymentDetail>
      </deploymentHistoryItem>
      <deploymentHistoryItem>
        <deploymentHistoryItemName>8b6f1e6e-c16b-11ed-9492-02a0006646c8</deploymentHistoryItemName>
        <completionTime>1678690316333</completionTime>
        <deployedEntityName>Hashicup_plateer</deployedEntityName>
        <deployedEntityType>application</deployedEntityType>
        <processName>Deploy Application</processName>
        <runTime>72476</runTime>
        <seeded>0</seeded>
        <smartDeploy>0</smartDeploy>
        <status>success</status>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <property>
            <propertyName>ec_Hashicup-run</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>1</value>
          </property>
          <property>
            <propertyName>ec_Hashicup_plateer-run</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>1</value>
          </property>
        </propertySheet>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>b454a1a5-c16b-11ed-b730-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v0.0.21</actualArtifactVersion>
          <artifactName>postgres</artifactName>
          <definedArtifactVersion>v0.0.21</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>b44beebb-c16b-11ed-9094-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v0.0.16</actualArtifactVersion>
          <artifactName>payments</artifactName>
          <definedArtifactVersion>v0.0.16</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>b46fcacd-c16b-11ed-b730-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>latest</actualArtifactVersion>
          <artifactName>jaeger-agent</artifactName>
          <definedArtifactVersion>latest</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>b4350bad-c16b-11ed-b730-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v1.0.3</actualArtifactVersion>
          <artifactName>frontend</artifactName>
          <definedArtifactVersion>v1.0.3</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>b45d547b-c16b-11ed-8a1d-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v0.0.21</actualArtifactVersion>
          <artifactName>products-api</artifactName>
          <definedArtifactVersion>v0.0.21</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>b441dd33-c16b-11ed-8a1d-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>alpine</actualArtifactVersion>
          <artifactName>nginx</artifactName>
          <definedArtifactVersion>alpine</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </deploymentDetailsItem>
        <deploymentDetailsItem>
          <deploymentDetailsItemName>b4667ba3-c16b-11ed-9094-02a0006646c8</deploymentDetailsItemName>
          <actualArtifactVersion>v0.0.6</actualArtifactVersion>
          <artifactName>public-api</artifactName>
          <definedArtifactVersion>v0.0.6</definedArtifactVersion>
          <microserviceName>Hashicup_plateer</microserviceName>
          <partial>0</partial>
          <processName>Deploy Application</processName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </deploymentDetailsItem>
        <microserviceDeploymentDetail>
          <microserviceDeploymentDetailName>b433d319-c16b-11ed-b730-02a0006646c8</microserviceDeploymentDetailName>
          <microserviceDefinitionType>helm</microserviceDefinitionType>
          <microserviceDeploymentData>{&#10;   "app_version" : "0.1.0",&#10;   "chart" : "hashicup-0.1.0",&#10;   "chart_name" : "hashicup",&#10;   "chart_version" : "0.1.0",&#10;   "manifests" : [&#10;      {&#10;         "source" : "hashicup/templates/frontend.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/frontend.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: frontend\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "frontend"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nginx\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "nginx"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/payments.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/payments.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: payments\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "payments"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/postgres.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/postgres.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: postgres\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "postgres"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: products-api\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "products-api"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/public-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/public-api.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: public-api\nautomountServiceAccountToken: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "automountServiceAccountToken" : "true",&#10;            "kind" : "ServiceAccount",&#10;            "metadata" : {&#10;               "name" : "public-api"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-configmap\ndata:\n  config: |\n\n    # /etc/nginx/conf.d/default.conf\n      proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;\n\n      upstream frontend_upstream {\n        server localhost:3000;\n      }\n\n      server {\n        listen 80;\n        server_name  localhost;\n\n        server_tokens off;\n\n        gzip on;\n        gzip_proxied any;\n        gzip_comp_level 4;\n        gzip_types text/css application/javascript image/svg+xml;\n\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n\n        location /_next/static {\n          proxy_cache STATIC;\n          proxy_pass http://frontend_upstream;\n\n          # For testing cache - remove before deploying to production\n          # add_header X-Cache-Status $upstream_cache_status;\n        }\n\n        location /static {\n          proxy_cache STATIC;\n          proxy_ignore_headers Cache-Control;\n          proxy_cache_valid 60m;\n          proxy_pass http://frontend_upstream;\n\n          # For testing cache - remove before deploying to production\n          # add_header X-Cache-Status $upstream_cache_status;\n        }\n\n        location / {\n          proxy_pass http://frontend_upstream;\n        }\n\n        location /api {\n          proxy_pass http://localhost:8080;\n        }\n      }\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "data" : {&#10;               "config" : "proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;\nupstream frontend_upstream {\n  server localhost:3000;\n}\nserver {\n  listen 80;\n  server_name  localhost;\n  server_tokens off;\n  gzip on;\n  gzip_proxied any;\n  gzip_comp_level 4;\n  gzip_types text/css application/javascript image/svg+xml;\n  proxy_http_version 1.1;\n  proxy_set_header Upgrade $http_upgrade;\n  proxy_set_header Connection 'upgrade';\n  proxy_set_header Host $host;\n  proxy_cache_bypass $http_upgrade;\n  location /_next/static {\n    proxy_cache STATIC;\n    proxy_pass http://frontend_upstream;\n  }\n  location /static {\n    proxy_cache STATIC;\n    proxy_ignore_headers Cache-Control;\n    proxy_cache_valid 60m;\n    proxy_pass http://frontend_upstream;\n  }\n  location / {\n    proxy_pass http://frontend_upstream;\n  }\n  location /api {\n    proxy_pass http://localhost:8080;\n  }\n}\n"&#10;            },&#10;            "kind" : "ConfigMap",&#10;            "metadata" : {&#10;               "name" : "nginx-configmap"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-configmap\ndata:\n  config: |\n    {\n      \"db_connection\": \"host=localhost port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "data" : {&#10;               "config" : "{\n  \"db_connection\": \"host=localhost port=5432 user=postgres password=password dbname=products sslmode=disable\",\n  \"bind_address\": \":9090\",\n  \"metrics_address\": \":9103\"\n}\n"&#10;            },&#10;            "kind" : "ConfigMap",&#10;            "metadata" : {&#10;               "name" : "db-configmap"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/frontend.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/frontend.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: frontend\nspec:\n  type: ClusterIP\n  ports:\n    - port: 3000\n      targetPort: 3000\n  selector:\n    app: frontend\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "frontend"&#10;               },&#10;               "name" : "frontend"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "port" : "3000",&#10;                     "targetPort" : "3000"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "frontend"&#10;               },&#10;               "type" : "ClusterIP"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  selector:\n    app: nginx\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 80\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "name" : "nginx"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "name" : "http",&#10;                     "port" : "80",&#10;                     "protocol" : "TCP",&#10;                     "targetPort" : "80"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "nginx"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/payments.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/payments.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  selector:\n    app: payments\n  ports:\n    - name: http\n      protocol: TCP\n      port: 1800\n      targetPort: 8080\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "name" : "payments"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "name" : "http",&#10;                     "port" : "1800",&#10;                     "protocol" : "TCP",&#10;                     "targetPort" : "8080"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "payments"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/postgres.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/postgres.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres\n  labels:\n    app: postgres\nspec:\n  ports:\n    - port: 5432\n      targetPort: 5432\n      protocol: TCP\n  selector:\n    app: postgres\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "postgres"&#10;               },&#10;               "name" : "postgres"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "port" : "5432",&#10;                     "protocol" : "TCP",&#10;                     "targetPort" : "5432"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "postgres"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: products-api\nspec:\n  selector:\n    app: products-api\n  ports:\n    - name: http\n      protocol: TCP\n      port: 9090\n      targetPort: 9090\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "name" : "products-api"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "name" : "http",&#10;                     "port" : "9090",&#10;                     "protocol" : "TCP",&#10;                     "targetPort" : "9090"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "products-api"&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/public-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/public-api.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: public-api\n  labels:\n    app: public-api\nspec:\n  type: ClusterIP\n  ports:\n    - port: 8080\n      targetPort: 8080\n  selector:\n    app: public-api\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "v1",&#10;            "kind" : "Service",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "public-api"&#10;               },&#10;               "name" : "public-api"&#10;            },&#10;            "spec" : {&#10;               "ports" : [&#10;                  {&#10;                     "port" : "8080",&#10;                     "targetPort" : "8080"&#10;                  }&#10;               ],&#10;               "selector" : {&#10;                  "app" : "public-api"&#10;               },&#10;               "type" : "ClusterIP"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/frontend.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/frontend.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: frontend\n      app: frontend\n  template:\n    metadata:\n      labels:\n        service: frontend\n        app: frontend\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: frontend\n      containers:\n        - name: frontend\n          image: hashicorpdemoapp/frontend:v1.0.3\n          imagePullPolicy: Always\n          env:\n            - name: NEXT_PUBLIC_PUBLIC_API_URL\n              value: \"/\"\n          ports:\n            - containerPort: 3000\n          # Added for debugging purposes - NOT RECOMMENDED\n          # securityContext:\n          #   allowPrivilegeEscalation: false\n          #   runAsUser: 0\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "name" : "frontend"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "frontend",&#10;                     "service" : "frontend"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "prometheus.io/port" : "9102",&#10;                        "prometheus.io/scrape" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "frontend",&#10;                        "service" : "frontend"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "env" : [&#10;                              {&#10;                                 "name" : "NEXT_PUBLIC_PUBLIC_API_URL",&#10;                                 "value" : "/"&#10;                              }&#10;                           ],&#10;                           "image" : "hashicorpdemoapp/frontend:v1.0.3",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "frontend",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "3000"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "frontend"&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        # BEGIN CONSUL-K8S MODIFICATION\n        consul.hashicorp.com/connect-service-upstreams: 'public-api:8080, frontend:3000'\n        # END CONSUL-K8S MODIFICATION\n    spec:\n      serviceAccountName: nginx\n      volumes:\n        - name: config\n          configMap:\n            name: nginx-configmap\n            items:\n              - key: config\n                path: default.conf\n      containers:\n        - name: nginx\n          image: nginx:alpine\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 80\n          volumeMounts:\n            - name: config\n              mountPath: /etc/nginx/conf.d\n              readOnly: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "nginx"&#10;               },&#10;               "name" : "nginx"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "nginx"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "consul.hashicorp.com/connect-service-upstreams" : "public-api:8080, frontend:3000"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "nginx"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "image" : "nginx:alpine",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "nginx",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "80"&#10;                              }&#10;                           ],&#10;                           "volumeMounts" : [&#10;                              {&#10;                                 "mountPath" : "/etc/nginx/conf.d",&#10;                                 "name" : "config",&#10;                                 "readOnly" : "true"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "nginx",&#10;                     "volumes" : [&#10;                        {&#10;                           "configMap" : {&#10;                              "items" : [&#10;                                 {&#10;                                    "key" : "config",&#10;                                    "path" : "default.conf"&#10;                                 }&#10;                              ],&#10;                              "name" : "nginx-configmap"&#10;                           },&#10;                           "name" : "config"&#10;                        }&#10;                     ]&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/payments.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/payments.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payments\n  labels:\n    app: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      labels:\n        app: payments\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: payments\n      containers:\n        - name: payments\n          image: hashicorpdemoapp/payments:v0.0.16\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "payments"&#10;               },&#10;               "name" : "payments"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "payments"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "payments"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "image" : "hashicorpdemoapp/payments:v0.0.16",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "payments",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "8080"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "payments"&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/postgres.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/postgres.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: postgres\n      app: postgres\n  template:\n    metadata:\n      labels:\n        service: postgres\n        app: postgres\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: postgres\n      containers:\n        - name: postgres\n          image: hashicorpdemoapp/product-api-db:v0.0.21\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 5432\n          env:\n            - name: POSTGRES_DB\n              value: products\n            - name: POSTGRES_USER\n              value: postgres\n            - name: POSTGRES_PASSWORD\n              value: password\n          volumeMounts:\n            - mountPath: \"/var/lib/postgresql/data\"\n              name: \"pgdata\"\n      volumes:\n        - name: pgdata\n          emptyDir: {}\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "name" : "postgres"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "postgres",&#10;                     "service" : "postgres"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "prometheus.io/port" : "9102",&#10;                        "prometheus.io/scrape" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "postgres",&#10;                        "service" : "postgres"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "env" : [&#10;                              {&#10;                                 "name" : "POSTGRES_DB",&#10;                                 "value" : "products"&#10;                              },&#10;                              {&#10;                                 "name" : "POSTGRES_USER",&#10;                                 "value" : "postgres"&#10;                              },&#10;                              {&#10;                                 "name" : "POSTGRES_PASSWORD",&#10;                                 "value" : "password"&#10;                              }&#10;                           ],&#10;                           "image" : "hashicorpdemoapp/product-api-db:v0.0.21",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "postgres",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "5432"&#10;                              }&#10;                           ],&#10;                           "volumeMounts" : [&#10;                              {&#10;                                 "mountPath" : "/var/lib/postgresql/data",&#10;                                 "name" : "pgdata"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "postgres",&#10;                     "volumes" : [&#10;                        {&#10;                           "emptyDir" : {},&#10;                           "name" : "pgdata"&#10;                        }&#10;                     ]&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: products-api\n  labels:\n    app: products-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: products-api\n  template:\n    metadata:\n      labels:\n        app: products-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n        # BEGIN CONSUL-K8S MODIFICATION\n        consul.hashicorp.com/connect-service-upstreams: 'postgres:5432'\n        # END CONSUL-K8S MODIFICATION\n    spec:\n      serviceAccountName: products-api\n      volumes:\n        - name: config\n          configMap:\n            name: db-configmap\n            items:\n              - key: config\n                path: conf.json\n      containers:\n        - name: products-api\n          image: hashicorpdemoapp/product-api:v0.0.21\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 9090\n            - containerPort: 9103\n          env:\n            - name: \"CONFIG_FILE\"\n              value: \"/config/conf.json\"\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 9090\n            initialDelaySeconds: 15\n            timeoutSeconds: 1\n            periodSeconds: 10\n            failureThreshold: 30\n          volumeMounts:\n            - name: config\n              mountPath: /config\n              readOnly: true\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "labels" : {&#10;                  "app" : "products-api"&#10;               },&#10;               "name" : "products-api"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "products-api"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "consul.hashicorp.com/connect-service-upstreams" : "postgres:5432",&#10;                        "prometheus.io/port" : "9102",&#10;                        "prometheus.io/scrape" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "products-api"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "env" : [&#10;                              {&#10;                                 "name" : "CONFIG_FILE",&#10;                                 "value" : "/config/conf.json"&#10;                              }&#10;                           ],&#10;                           "image" : "hashicorpdemoapp/product-api:v0.0.21",&#10;                           "imagePullPolicy" : "Always",&#10;                           "livenessProbe" : {&#10;                              "failureThreshold" : "30",&#10;                              "httpGet" : {&#10;                                 "path" : "/health",&#10;                                 "port" : "9090"&#10;                              },&#10;                              "initialDelaySeconds" : "15",&#10;                              "periodSeconds" : "10",&#10;                              "timeoutSeconds" : "1"&#10;                           },&#10;                           "name" : "products-api",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "9090"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "9103"&#10;                              }&#10;                           ],&#10;                           "volumeMounts" : [&#10;                              {&#10;                                 "mountPath" : "/config",&#10;                                 "name" : "config",&#10;                                 "readOnly" : "true"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "products-api",&#10;                     "volumes" : [&#10;                        {&#10;                           "configMap" : {&#10;                              "items" : [&#10;                                 {&#10;                                    "key" : "config",&#10;                                    "path" : "conf.json"&#10;                                 }&#10;                              ],&#10;                              "name" : "db-configmap"&#10;                           },&#10;                           "name" : "config"&#10;                        }&#10;                     ]&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/public-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/public-api.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: public-api\n      app: public-api\n  template:\n    metadata:\n      labels:\n        service: public-api\n        app: public-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n        # BEGIN CONSUL-K8S MODIFICATION\n        consul.hashicorp.com/connect-service-upstreams: 'products-api:9090, payments:1800'\n        # END CONSUL-K8S MODIFICATION\n    spec:\n      serviceAccountName: public-api\n      containers:\n        - name: public-api\n          image: hashicorpdemoapp/public-api:v0.0.6\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080\n          env:\n            - name: BIND_ADDRESS\n              value: \":8080\"\n            - name: PRODUCT_API_URI\n              value: \"http://localhost:9090\"\n            - name: PAYMENT_API_URI\n              value: \"http://localhost:1800\"\n        - name: jaeger-agent\n          image: jaegertracing/jaeger-agent:latest\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 5775\n              name: zk-compact-trft\n              protocol: UDP\n            - containerPort: 5778\n              name: config-rest\n              protocol: TCP\n            - containerPort: 6831\n              name: jg-compact-trft\n              protocol: UDP\n            - containerPort: 6832\n              name: jg-binary-trft\n              protocol: UDP\n            - containerPort: 14271\n              name: admin-http\n              protocol: TCP\n          args:\n            - --reporter.grpc.host-port=dns:///jaeger-collector-headless.default:14250\n            - --reporter.type=grpc\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "apps/v1",&#10;            "kind" : "Deployment",&#10;            "metadata" : {&#10;               "name" : "public-api"&#10;            },&#10;            "spec" : {&#10;               "replicas" : "1",&#10;               "selector" : {&#10;                  "matchLabels" : {&#10;                     "app" : "public-api",&#10;                     "service" : "public-api"&#10;                  }&#10;               },&#10;               "template" : {&#10;                  "metadata" : {&#10;                     "annotations" : {&#10;                        "consul.hashicorp.com/connect-inject" : "true",&#10;                        "consul.hashicorp.com/connect-service-upstreams" : "products-api:9090, payments:1800",&#10;                        "prometheus.io/port" : "9102",&#10;                        "prometheus.io/scrape" : "true"&#10;                     },&#10;                     "labels" : {&#10;                        "app" : "public-api",&#10;                        "service" : "public-api"&#10;                     }&#10;                  },&#10;                  "spec" : {&#10;                     "containers" : [&#10;                        {&#10;                           "env" : [&#10;                              {&#10;                                 "name" : "BIND_ADDRESS",&#10;                                 "value" : ":8080"&#10;                              },&#10;                              {&#10;                                 "name" : "PRODUCT_API_URI",&#10;                                 "value" : "http://localhost:9090"&#10;                              },&#10;                              {&#10;                                 "name" : "PAYMENT_API_URI",&#10;                                 "value" : "http://localhost:1800"&#10;                              }&#10;                           ],&#10;                           "image" : "hashicorpdemoapp/public-api:v0.0.6",&#10;                           "imagePullPolicy" : "Always",&#10;                           "name" : "public-api",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "8080"&#10;                              }&#10;                           ]&#10;                        },&#10;                        {&#10;                           "args" : [&#10;                              "--reporter.grpc.host-port=dns:///jaeger-collector-headless.default:14250",&#10;                              "--reporter.type=grpc"&#10;                           ],&#10;                           "image" : "jaegertracing/jaeger-agent:latest",&#10;                           "imagePullPolicy" : "IfNotPresent",&#10;                           "name" : "jaeger-agent",&#10;                           "ports" : [&#10;                              {&#10;                                 "containerPort" : "5775",&#10;                                 "name" : "zk-compact-trft",&#10;                                 "protocol" : "UDP"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "5778",&#10;                                 "name" : "config-rest",&#10;                                 "protocol" : "TCP"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "6831",&#10;                                 "name" : "jg-compact-trft",&#10;                                 "protocol" : "UDP"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "6832",&#10;                                 "name" : "jg-binary-trft",&#10;                                 "protocol" : "UDP"&#10;                              },&#10;                              {&#10;                                 "containerPort" : "14271",&#10;                                 "name" : "admin-http",&#10;                                 "protocol" : "TCP"&#10;                              }&#10;                           ]&#10;                        }&#10;                     ],&#10;                     "serviceAccountName" : "public-api"&#10;                  }&#10;               }&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/ingressGateway.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/ingressGateway.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\n  namespace: consul\nspec:\n  listeners:\n    - port: 8080\n      protocol: http\n      services:\n        - name: nginx\n          hosts: [\"*\"]\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "IngressGateway",&#10;            "metadata" : {&#10;               "name" : "ingress-gateway",&#10;               "namespace" : "consul"&#10;            },&#10;            "spec" : {&#10;               "listeners" : [&#10;                  {&#10;                     "port" : "8080",&#10;                     "protocol" : "http",&#10;                     "services" : [&#10;                        {&#10;                           "hosts" : "[\"*\"]",&#10;                           "name" : "nginx"&#10;                        }&#10;                     ]&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/frontend.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/frontend.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "frontend"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/nginx.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/nginx.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: nginx\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "nginx"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/payments.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/payments.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "payments"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/postgres.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/postgres.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: postgres\nspec:\n  protocol: \"tcp\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "postgres"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "tcp"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/products-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/products-api.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: products-api\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "products-api"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/public-api.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/public-api.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: \"http\"\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceDefaults",&#10;            "metadata" : {&#10;               "name" : "public-api"&#10;            },&#10;            "spec" : {&#10;               "protocol" : "http"&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api-hashicup\nspec:\n  sources:\n    - name: nginx\n      action: allow\n  destination:\n    name: public-api\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "public-api-hashicup"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "public-api"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "nginx"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: products-api-hashicup\nspec:\n  sources:\n    - name: public-api\n      action: allow\n  destination:\n    name: products-api\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "products-api-hashicup"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "products-api"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "public-api"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  sources:\n    - name: public-api-hashicup\n      action: allow\n  destination:\n    name: payments\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "payments"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "payments"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "public-api-hashicup"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: postgres\nspec:\n  sources:\n    - name: products-api-hashicup\n      action: allow\n  destination:\n    name: postgres\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "postgres"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "postgres"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "products-api-hashicup"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend-hashicup\nspec:\n  sources:\n    - name: nginx\n      action: allow\n  destination:\n    name: frontend\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "frontend-hashicup"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "frontend"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "allow",&#10;                     "name" : "nginx"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      },&#10;      {&#10;         "source" : "hashicup/templates/intentions.yaml",&#10;         "text" : "---\n# Source: hashicup/templates/intentions.yaml\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: deny-all\nspec:\n  destination:\n    name: \"*\"\n  sources:\n    - name: \"*\" \n      action: deny\n\n",&#10;         "yaml" : {&#10;            "apiVersion" : "consul.hashicorp.com/v1alpha1",&#10;            "kind" : "ServiceIntentions",&#10;            "metadata" : {&#10;               "name" : "deny-all"&#10;            },&#10;            "spec" : {&#10;               "destination" : {&#10;                  "name" : "*"&#10;               },&#10;               "sources" : [&#10;                  {&#10;                     "action" : "deny",&#10;                     "name" : "*"&#10;                  }&#10;               ]&#10;            }&#10;         }&#10;      }&#10;   ],&#10;   "name" : "my-hashicup",&#10;   "namespace" : "plateer",&#10;   "notes" : "",&#10;   "revision" : "1",&#10;   "status" : "deployed",&#10;   "updated" : "2023-03-13 15:52:05.117481985 +0900 KST",&#10;   "values" : {}&#10;}&#10;</microserviceDeploymentData>
          <microserviceDeploymentSummary>NAME: my-hashicup&#10;LAST DEPLOYED: Mon Mar 13 15:52:05 2023&#10;NAMESPACE: plateer&#10;STATUS: deployed&#10;REVISION: 1&#10;TEST SUITE: None&#10;</microserviceDeploymentSummary>
          <microserviceName>Hashicup_plateer</microserviceName>
          <status>success</status>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <definitionSourceParameters>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>repositoryName</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>hashicup-repo</value>
            </property>
            <property>
              <propertyName>repositoryUrl</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>https://harbor.idtplateer.com/chartrepo/hashicup</value>
            </property>
            <property>
              <propertyName>repository_credential</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>/projects/Hashicup/credentials/harbor_cred</value>
            </property>
          </definitionSourceParameters>
          <deployParameters>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>additionalOptions</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>--create-namespace</value>
            </property>
            <property>
              <propertyName>chart</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>hashicup</value>
            </property>
            <property>
              <propertyName>releaseName</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>my-hashicup</value>
            </property>
            <property>
              <propertyName>values</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value></value>
            </property>
            <property>
              <propertyName>version</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>0.1.0</value>
            </property>
          </deployParameters>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <rollbackParameters>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>rollbackEnabled</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>true</value>
            </property>
            <property>
              <propertyName>waitTimeout</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>300</value>
            </property>
          </rollbackParameters>
        </microserviceDeploymentDetail>
      </deploymentHistoryItem>
      <utilityResource>
        <utilityResourceName>local</utilityResourceName>
        <resourceName>local</resourceName>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
      </utilityResource>
    </environment>
    <procedure>
      <procedureName>CreateApplication</procedureName>
      <description></description>
      <jobNameTemplate></jobNameTemplate>
      <resourceName>local</resourceName>
      <timeLimit></timeLimit>
      <timeLimitUnits>minutes</timeLimitUnits>
      <tracked>0</tracked>
      <workspaceName>default</workspaceName>
      <acl>
        <inheriting>1</inheriting>
        <tracked>0</tracked>
      </acl>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <property>
          <propertyName>ec_customEditorData</propertyName>
          <tracked>0</tracked>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>parameters</propertyName>
              <tracked>0</tracked>
              <propertySheet>
                <credentialProtected>0</credentialProtected>
                <tracked>0</tracked>
                <acl>
                  <inheriting>1</inheriting>
                  <tracked>0</tracked>
                </acl>
                <property>
                  <propertyName>devValues</propertyName>
                  <tracked>0</tracked>
                  <propertySheet>
                    <credentialProtected>0</credentialProtected>
                    <tracked>0</tracked>
                    <acl>
                      <inheriting>1</inheriting>
                      <tracked>0</tracked>
                    </acl>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <suppressValueTracking>0</suppressValueTracking>
                      <tracked>0</tracked>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>prodValues</propertyName>
                  <tracked>0</tracked>
                  <propertySheet>
                    <credentialProtected>0</credentialProtected>
                    <tracked>0</tracked>
                    <acl>
                      <inheriting>1</inheriting>
                      <tracked>0</tracked>
                    </acl>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <suppressValueTracking>0</suppressValueTracking>
                      <tracked>0</tracked>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
                <property>
                  <propertyName>qaValues</propertyName>
                  <tracked>0</tracked>
                  <propertySheet>
                    <credentialProtected>0</credentialProtected>
                    <tracked>0</tracked>
                    <acl>
                      <inheriting>1</inheriting>
                      <tracked>0</tracked>
                    </acl>
                    <property>
                      <propertyName>formType</propertyName>
                      <expandable>1</expandable>
                      <suppressValueTracking>0</suppressValueTracking>
                      <tracked>0</tracked>
                      <value>standard</value>
                    </property>
                  </propertySheet>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </property>
      </propertySheet>
      <step>
        <stepName>createEnvs</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>def projName  = "$[/myProject/projectName]"&#10;def envs = ["plateer"]&#10;def resources = []&#10;def environments = []&#10;&#10;envs.each { env -&gt;&#10;def envName = (String)"${projName}_${env}"&#10;def ns = (String)"${env}"&#10;&#10;environment envName, { &#10;  projectName = projName&#10;  &#10;  cluster envName, {&#10;    definitionParameter = [&#10;      'config': '/projects/Hashicup/pluginConfigurations/helmcfg',&#10;      'kubecontext': '',&#10;      'namespace': ns,&#10;    ]&#10;    environmentName = envName&#10;    pluginKey = 'EC-Helm'&#10;  }&#10;&#10;  utilityResource 'local', {&#10;    resourceName = 'local'&#10;  }&#10;}&#10;&#10;}</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>local</resourceName>
        <shell>ectool evalDsl --dslFile {0}</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <tracked>0</tracked>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
      </step>
      <step>
        <stepName>createMicroservices</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>def projName = "$[/myProject/projectName]"&#10;def envs = ["plateer"]&#10;def resources = []&#10;def environments = []&#10;def helmValues = ''&#10;def appName = ''&#10;def envName = '' &#10;&#10;envs.each { env -&gt;&#10;&#10;    appName = (String)"${projName}_${env}"&#10;    envName = (String)"${env}"&#10;&#10;    application appName, {&#10;        applicationType = 'microservice'&#10;        projectName = projName&#10;&#10;        microservice appName, {&#10;            applicationName = appName&#10;&#10;            definitionSource = 'helm_repository'&#10;&#10;            definitionSourceParameter = [&#10;                'repository_credential': '/projects/Hashicup/credentials/harbor_cred',&#10;                'repositoryName': 'hashicup-repo',&#10;                'repositoryUrl': 'https://harbor.idtplateer.com/chartrepo/hashicup',&#10;            ]&#10;&#10;            definitionType = 'helm'&#10;&#10;            deployParameter = [&#10;                'additionalOptions': '--create-namespace',&#10;                'chart': 'hashicup',&#10;                'releaseName': 'my-hashicup',&#10;                'version': '0.1.0',&#10;                'values': helmValues,&#10;            ]&#10;&#10;            rollbackParameter = [&#10;                'rollbackEnabled': 'true',&#10;                'waitTimeout': '300',&#10;            ]&#10;        }&#10;&#10;        process 'Deploy Application', {&#10;            description = 'System generated process for microservice application'&#10;            applicationName = appName&#10;            processType = 'DEPLOY'&#10;            formalParameter 'ec_Hashicup-run', defaultValue: '1', {&#10;                expansionDeferred = '1'&#10;                type = 'checkbox'&#10;            }&#10;            &#10;            property 'ec_deploy', {&#10;                ec_notifierStatus = '0'&#10;            }&#10;        }&#10;&#10;        process 'Uninstall Application', {&#10;            applicationName = appName&#10;            exclusiveEnvironment = '0'&#10;            processType = 'UNDEPLOY'&#10;            workspaceName = 'default'&#10;&#10;            processStep 'Delete Release', {&#10;                actualParameter = [&#10;                    'actionOnError': '0',&#10;                    'config': '/projects/Hashicup/pluginConfigurations/helmcfg',&#10;                    'errorValue': '',&#10;                    'options': (String)"-n ${envName}",&#10;                    'releaseName': 'my-hashicup',&#10;                    'resultPropertySheet': '/myJob/deleteRelease',&#10;                ]&#10;                dependencyJoinType = 'and'&#10;                processStepType = 'plugin'&#10;                subprocedure = 'Delete Release'&#10;                subproject = '/plugins/EC-Helm/project'&#10;&#10;                property 'ec_deploy', {&#10;                    ec_notifierStatus = '0'&#10;                }&#10;            }&#10;&#10;            property 'ec_deploy', {&#10;                ec_notifierStatus = '0'&#10;            }&#10;        }&#10;&#10;        property 'ec_deploy', {&#10;            ec_notifierStatus = '0'&#10;        }&#10;    }&#10;}</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>local</resourceName>
        <shell>ectool evalDsl --dslFile {0}</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <tracked>0</tracked>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
      </step>
      <step>
        <stepName>createEnvMapping</stepName>
        <alwaysRun>0</alwaysRun>
        <broadcast>0</broadcast>
        <command>def projName  = "$[/myProject/projectName]"&#10;def envs = ["plateer"]&#10;def resources = []&#10;def environments = []&#10;&#10;envs.each { env -&gt;&#10;def appName = (String)"${projName}_${env}"&#10;def tierMapName = (String)"${projName}_${env}_map" &#10;def envName = (String)"${projName}_${env}"&#10;&#10;application appName, { &#10;  applicationType = 'microservice'&#10;  projectName = projName&#10;&#10;  tierMap tierMapName, {&#10;    applicationName = appName&#10;    environmentName = envName&#10;    environmentProjectName = projName&#10;    microserviceMapping tierMapName, {&#10;      clusterName = envName&#10;      clusterProjectName = projName&#10;      microserviceName = appName&#10;      tierMapName = tierMapName&#10;    }&#10;  }&#10;}&#10;&#10;}</command>
        <condition></condition>
        <description></description>
        <errorHandling>failProcedure</errorHandling>
        <exclusiveMode>none</exclusiveMode>
        <logFileName></logFileName>
        <parallel>0</parallel>
        <postProcessor></postProcessor>
        <precondition></precondition>
        <releaseMode>none</releaseMode>
        <resourceName>local</resourceName>
        <shell>ectool evalDsl --dslFile {0}</shell>
        <timeLimit></timeLimit>
        <timeLimitUnits>minutes</timeLimitUnits>
        <tracked>0</tracked>
        <workingDirectory></workingDirectory>
        <workspaceName></workspaceName>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
      </step>
    </procedure>
    <application>
      <applicationName>Hashicup_plateer</applicationName>
      <applicationType>microservice</applicationType>
      <tracked>0</tracked>
      <acl>
        <inheriting>1</inheriting>
        <tracked>0</tracked>
      </acl>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <property>
          <propertyName>ec_deploy</propertyName>
          <tracked>0</tracked>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>ec_notifierStatus</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>0</value>
            </property>
          </propertySheet>
        </property>
        <property>
          <propertyName>jobCounter</propertyName>
          <expandable>1</expandable>
          <suppressValueTracking>1</suppressValueTracking>
          <tracked>0</tracked>
          <value>3</value>
        </property>
      </propertySheet>
      <microservice>
        <microserviceName>Hashicup_plateer</microserviceName>
        <applicationName>Hashicup_plateer</applicationName>
        <definitionSource>helm_repository</definitionSource>
        <definitionType>helm</definitionType>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <definitionSourceParameters>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <property>
            <propertyName>repositoryName</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>hashicup-repo</value>
          </property>
          <property>
            <propertyName>repositoryUrl</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>https://harbor.idtplateer.com/chartrepo/hashicup</value>
          </property>
          <property>
            <propertyName>repository_credential</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>/projects/Hashicup/credentials/harbor_cred</value>
          </property>
        </definitionSourceParameters>
        <deployParameters>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <property>
            <propertyName>additionalOptions</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>--create-namespace</value>
          </property>
          <property>
            <propertyName>chart</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>hashicup</value>
          </property>
          <property>
            <propertyName>releaseName</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>my-hashicup</value>
          </property>
          <property>
            <propertyName>values</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value></value>
          </property>
          <property>
            <propertyName>version</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>0.1.0</value>
          </property>
        </deployParameters>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
        <rollbackParameters>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <property>
            <propertyName>rollbackEnabled</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>true</value>
          </property>
          <property>
            <propertyName>waitTimeout</propertyName>
            <expandable>1</expandable>
            <suppressValueTracking>0</suppressValueTracking>
            <tracked>0</tracked>
            <value>300</value>
          </property>
        </rollbackParameters>
        <process>
          <processName>Deploy Microservice Process</processName>
          <description>System generated process for microservice deployment</description>
          <processType>DEPLOY</processType>
          <timeLimitUnits>minutes</timeLimitUnits>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <processStep>
            <processStepName>Retrieve Artifact</processStepName>
            <alwaysRun>0</alwaysRun>
            <description>System generated step to retrieve microservice definition artifact</description>
            <errorHandling>abortJob</errorHandling>
            <processStepType>plugin</processStepType>
            <subprocedure>Source Provider</subprocedure>
            <subproject>/plugins/EC-Helm/project</subproject>
            <tracked>0</tracked>
            <useUtilityResource>0</useUtilityResource>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </processStep>
          <processStep>
            <processStepName>Deploy Microservice</processStepName>
            <alwaysRun>0</alwaysRun>
            <description>System generated step to deploy microservice</description>
            <errorHandling>abortJob</errorHandling>
            <processStepType>plugin</processStepType>
            <subprocedure>Deploy Service</subprocedure>
            <subproject>/plugins/EC-Helm/project</subproject>
            <tracked>0</tracked>
            <useUtilityResource>0</useUtilityResource>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </processStep>
          <processDependency>
            <branchType>ALWAYS</branchType>
            <source>processStep-75f2ef14-c16b-11ed-a5ba-02a0006646c8</source>
            <sourceName>Retrieve Artifact</sourceName>
            <target>processStep-75f4eae8-c16b-11ed-a5ba-02a0006646c8</target>
            <targetName>Deploy Microservice</targetName>
            <tracked>0</tracked>
          </processDependency>
        </process>
      </microservice>
      <process>
        <processName>Deploy Application</processName>
        <description>System generated process for microservice application</description>
        <processType>DEPLOY</processType>
        <timeLimitUnits>minutes</timeLimitUnits>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <property>
            <propertyName>ec_deploy</propertyName>
            <tracked>0</tracked>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
              <property>
                <propertyName>ec_notifierStatus</propertyName>
                <expandable>1</expandable>
                <suppressValueTracking>0</suppressValueTracking>
                <tracked>0</tracked>
                <value>0</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
        <formalParameter>
          <formalParameterName>ec_Hashicup-run</formalParameterName>
          <defaultValue>1</defaultValue>
          <expansionDeferred>1</expansionDeferred>
          <required>0</required>
          <tracked>0</tracked>
          <type>checkbox</type>
        </formalParameter>
        <formalParameter>
          <formalParameterName>ec_Hashicup_plateer-run</formalParameterName>
          <defaultValue>1</defaultValue>
          <expansionDeferred>1</expansionDeferred>
          <required>0</required>
          <tracked>0</tracked>
          <type>checkbox</type>
        </formalParameter>
        <processStep>
          <processStepName>Hashicup_plateer</processStepName>
          <alwaysRun>0</alwaysRun>
          <description>System generated step to invoke microservice process</description>
          <errorHandling>abortJob</errorHandling>
          <processStepType>process</processStepType>
          <submicroservice>Hashicup_plateer</submicroservice>
          <submicroserviceProcess>Deploy Microservice Process</submicroserviceProcess>
          <tracked>0</tracked>
          <useUtilityResource>1</useUtilityResource>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>ec_deploy</propertyName>
              <tracked>0</tracked>
              <propertySheet>
                <credentialProtected>0</credentialProtected>
                <tracked>0</tracked>
                <acl>
                  <inheriting>1</inheriting>
                  <tracked>0</tracked>
                </acl>
                <property>
                  <propertyName>ec_notifierStatus</propertyName>
                  <expandable>1</expandable>
                  <suppressValueTracking>0</suppressValueTracking>
                  <tracked>0</tracked>
                  <value>0</value>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </processStep>
      </process>
      <process>
        <processName>Uninstall Application</processName>
        <exclusiveEnvironment>0</exclusiveEnvironment>
        <processType>UNDEPLOY</processType>
        <timeLimitUnits>minutes</timeLimitUnits>
        <tracked>0</tracked>
        <workspaceName>default</workspaceName>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <property>
            <propertyName>ec_deploy</propertyName>
            <tracked>0</tracked>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
              <property>
                <propertyName>ec_notifierStatus</propertyName>
                <expandable>1</expandable>
                <suppressValueTracking>0</suppressValueTracking>
                <tracked>0</tracked>
                <value>0</value>
              </property>
            </propertySheet>
          </property>
        </propertySheet>
        <processStep>
          <processStepName>Delete Release</processStepName>
          <alwaysRun>0</alwaysRun>
          <dependencyJoinType>and</dependencyJoinType>
          <errorHandling>abortJob</errorHandling>
          <processStepType>plugin</processStepType>
          <subprocedure>Delete Release</subprocedure>
          <subproject>/plugins/EC-Helm/project</subproject>
          <timeLimitUnits>minutes</timeLimitUnits>
          <tracked>0</tracked>
          <useUtilityResource>0</useUtilityResource>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <actualParameters>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>actionOnError</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>0</value>
            </property>
            <property>
              <propertyName>config</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>/projects/Hashicup/pluginConfigurations/helmcfg</value>
            </property>
            <property>
              <propertyName>errorValue</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value></value>
            </property>
            <property>
              <propertyName>options</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>-n plateer</value>
            </property>
            <property>
              <propertyName>releaseName</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>my-hashicup</value>
            </property>
            <property>
              <propertyName>resultPropertySheet</propertyName>
              <expandable>1</expandable>
              <suppressValueTracking>0</suppressValueTracking>
              <tracked>0</tracked>
              <value>/myJob/deleteRelease</value>
            </property>
          </actualParameters>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <property>
              <propertyName>ec_deploy</propertyName>
              <tracked>0</tracked>
              <propertySheet>
                <credentialProtected>0</credentialProtected>
                <tracked>0</tracked>
                <acl>
                  <inheriting>1</inheriting>
                  <tracked>0</tracked>
                </acl>
                <property>
                  <propertyName>ec_notifierStatus</propertyName>
                  <expandable>1</expandable>
                  <suppressValueTracking>0</suppressValueTracking>
                  <tracked>0</tracked>
                  <value>0</value>
                </property>
              </propertySheet>
            </property>
          </propertySheet>
        </processStep>
      </process>
      <tierMap>
        <tierMapName>Hashicup_plateer_map</tierMapName>
        <applicationName>Hashicup_plateer</applicationName>
        <environmentName>Hashicup_plateer</environmentName>
        <projectName>Hashicup</projectName>
        <tracked>0</tracked>
        <microserviceMapping>
          <microserviceMappingName>Hashicup_plateer_map</microserviceMappingName>
          <clusterName>Hashicup_plateer</clusterName>
          <clusterProjectName>Hashicup</clusterProjectName>
          <microserviceName>Hashicup_plateer</microserviceName>
          <tierMapName>Hashicup_plateer_map</tierMapName>
          <tracked>0</tracked>
        </microserviceMapping>
      </tierMap>
    </application>
    <pipeline>
      <pipelineName>Test</pipelineName>
      <description></description>
      <disableMultipleActiveRuns>0</disableMultipleActiveRuns>
      <disableRestart>0</disableRestart>
      <overrideWorkspace>0</overrideWorkspace>
      <pipelineEnabled>1</pipelineEnabled>
      <skipStageMode>ENABLED</skipStageMode>
      <tracked>0</tracked>
      <acl>
        <inheriting>1</inheriting>
        <tracked>0</tracked>
      </acl>
      <flow>
        <flowName>d3c1e5d7-c169-11ed-a572-02a0006646c8_pipelineflow</flowName>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
        <flowState>
          <flowStateName>050d4df4-b8db-11ed-81dd-029890443bb4_stage_flow_state</flowStateName>
          <advancedMode>0</advancedMode>
          <alwaysRun>0</alwaysRun>
          <colorCode>#289ce1</colorCode>
          <deployerTask>0</deployerTask>
          <description>stage flow step</description>
          <flowStateType>task</flowStateType>
          <index>0</index>
          <keepOnError>0</keepOnError>
          <subflow>d3c51a35-c169-11ed-a572-02a0006646c8_stageflow</subflow>
          <tracked>0</tracked>
          <useApproverAcl>0</useApproverAcl>
          <waitForCompletion>0</waitForCompletion>
          <waitForPlannedStart>0</waitForPlannedStart>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </flowState>
      </flow>
      <propertySheet>
        <credentialProtected>0</credentialProtected>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
      </propertySheet>
      <formalParameter>
        <formalParameterName>ec_stagesToRun</formalParameterName>
        <expansionDeferred>1</expansionDeferred>
        <required>0</required>
        <tracked>0</tracked>
      </formalParameter>
      <stage>
        <stageName>Stage 1</stageName>
        <completed>0</completed>
        <completionType>auto</completionType>
        <flowStateName>050d4df4-b8db-11ed-81dd-029890443bb4_stage_flow_state</flowStateName>
        <pipelineName>Test</pipelineName>
        <tracked>0</tracked>
        <acl>
          <inheriting>1</inheriting>
          <tracked>0</tracked>
        </acl>
        <flow>
          <flowName>d3c51a35-c169-11ed-a572-02a0006646c8_stageflow</flowName>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
          <flowState>
            <flowStateName>0a5aba1f-b8db-11ed-a4e4-029890443bb4_task_flow_state</flowStateName>
            <advancedMode>0</advancedMode>
            <alwaysRun>0</alwaysRun>
            <deployerTask>1</deployerTask>
            <description></description>
            <errorHandling>stopOnError</errorHandling>
            <flowStateType>task</flowStateType>
            <index>0</index>
            <keepOnError>0</keepOnError>
            <resourceName></resourceName>
            <runType>serial</runType>
            <tracked>0</tracked>
            <useApproverAcl>0</useApproverAcl>
            <waitForCompletion>0</waitForCompletion>
            <waitForPlannedStart>0</waitForPlannedStart>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
            <propertySheet>
              <credentialProtected>0</credentialProtected>
              <tracked>0</tracked>
              <acl>
                <inheriting>1</inheriting>
                <tracked>0</tracked>
              </acl>
            </propertySheet>
          </flowState>
        </flow>
        <propertySheet>
          <credentialProtected>0</credentialProtected>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
        </propertySheet>
        <gate>
          <gateName>d3c6c7f1-c169-11ed-a572-02a0006646c8</gateName>
          <gateType>PRE</gateType>
          <stageName>Stage 1</stageName>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </gate>
        <gate>
          <gateName>d3c76435-c169-11ed-a572-02a0006646c8</gateName>
          <gateType>POST</gateType>
          <stageName>Stage 1</stageName>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </gate>
        <task>
          <taskName>Test</taskName>
          <allowOutOfOrderRun>0</allowOutOfOrderRun>
          <description></description>
          <flowStateName>0a5aba1f-b8db-11ed-a4e4-029890443bb4_task_flow_state</flowStateName>
          <taskEnabled>1</taskEnabled>
          <taskSkippable>0</taskSkippable>
          <taskType>DEPLOYER</taskType>
          <tracked>0</tracked>
          <acl>
            <inheriting>1</inheriting>
            <tracked>0</tracked>
          </acl>
          <propertySheet>
            <credentialProtected>0</credentialProtected>
            <tracked>0</tracked>
            <acl>
              <inheriting>1</inheriting>
              <tracked>0</tracked>
            </acl>
          </propertySheet>
        </task>
      </stage>
    </pipeline>
  </project>
</exportedData>
